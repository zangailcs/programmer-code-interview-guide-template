<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AnalysisProjectProfileManager">
    <option name="PROJECT_PROFILE" value="Project Default" />
    <option name="USE_PROJECT_LEVEL_SETTINGS" value="false" />
    <scopes />
    <profiles>
      <profile profile_name="Project Default" version="1.0" is_locked="false">
        <coding_rule class="AbbreviationAsWordInNameCheck" level="MAJOR" enabled="true">
          <param name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF, ANNOTATION_FIELD_DEF,                     PARAMETER_DEF, VARIABLE_DEF, METHOD_DEF, PATTERN_VARIABLE_DEF, RECORD_DEF,                     RECORD_COMPONENT_DEF" />
          <param name="ignoreFinal" value="false" />
          <param name="allowedAbbreviationLength" value="0" />
        </coding_rule>
        <coding_rule class="AbstractClassNameCheck" level="MAJOR" enabled="false" />
        <coding_rule class="AnnotationLocationCheck" level="MAJOR" enabled="true">
          <param name="allowSamelineMultipleAnnotations" value="true" />
          <param name="tokens" value="VARIABLE_DEF" />
        </coding_rule>
        <coding_rule class="AnnotationOnSameLineCheck" level="MAJOR" enabled="false" />
        <coding_rule class="AnnotationUseStyleCheck" level="MAJOR" enabled="false" />
        <coding_rule class="AnonInnerLengthCheck" level="MAJOR" enabled="false" />
        <coding_rule class="ArrayTrailingCommaCheck" level="MAJOR" enabled="false" />
        <coding_rule class="ArrayTypeStyleCheck" level="MINOR" enabled="true" />
        <coding_rule class="AtclauseOrderCheck" level="MAJOR" enabled="true">
          <param name="tagOrder" value="@param, @return, @throws, @deprecated" />
          <param name="target" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF" />
        </coding_rule>
        <coding_rule class="AvoidEscapedUnicodeCharactersCheck" level="MAJOR" enabled="true">
          <param name="allowNonPrintableEscapes" value="true" />
          <param name="allowByTailComment" value="true" />
          <param name="allowEscapesForControlCharacters" value="true" />
        </coding_rule>
        <coding_rule class="AvoidInlineConditionalsCheck" level="MINOR" enabled="false" />
        <coding_rule class="AvoidNestedBlocksCheck" level="MAJOR" enabled="false" />
        <coding_rule class="AvoidNoArgumentSuperConstructorCallCheck" level="MAJOR" enabled="false" />
        <coding_rule class="AvoidStarImportCheck" level="MINOR" enabled="false" />
        <coding_rule class="AvoidStaticImportCheck" level="MAJOR" enabled="false" />
        <coding_rule class="BooleanExpressionComplexityCheck" level="MAJOR" enabled="false" />
        <coding_rule class="CatchParameterNameCheck" level="MAJOR" enabled="true">
          <param name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$" />
        </coding_rule>
        <coding_rule class="ClassDataAbstractionCouplingCheck" level="MAJOR" enabled="false" />
        <coding_rule class="ClassFanOutComplexityCheck" level="MAJOR" enabled="false" />
        <coding_rule class="ClassMemberImpliedModifierCheck" level="MAJOR" enabled="false" />
        <coding_rule class="ClassTypeParameterNameCheck" level="MAJOR" enabled="true">
          <param name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)" />
        </coding_rule>
        <coding_rule class="CommentsIndentationCheck" level="MAJOR" enabled="true">
          <param name="tokens" value="SINGLE_LINE_COMMENT, BLOCK_COMMENT_BEGIN" />
        </coding_rule>
        <coding_rule class="ConstantNameCheck" level="MINOR" enabled="false" />
        <coding_rule class="CovariantEqualsCheck" level="CRITICAL" enabled="false" />
        <coding_rule class="CustomImportOrderCheck" level="MAJOR" enabled="false" />
        <coding_rule class="CyclomaticComplexityCheck" level="MAJOR" enabled="false" />
        <coding_rule class="DeclarationOrderCheck" level="INFO" enabled="false" />
        <coding_rule class="DefaultComesLastCheck" level="MAJOR" enabled="false" />
        <coding_rule class="DescendantTokenCheck" level="MAJOR" enabled="false" />
        <coding_rule class="DesignForExtensionCheck" level="MINOR" enabled="false" />
        <coding_rule class="EmptyBlockCheck" level="MAJOR" enabled="true">
          <param name="tokens" value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH" />
          <param name="option" value="TEXT" />
        </coding_rule>
        <coding_rule class="EmptyCatchBlockCheck" level="MAJOR" enabled="true">
          <param name="exceptionVariableName" value="expected" />
        </coding_rule>
        <coding_rule class="EmptyForInitializerPadCheck" level="MINOR" enabled="false" />
        <coding_rule class="EmptyForIteratorPadCheck" level="MINOR" enabled="false" />
        <coding_rule class="EmptyLineSeparatorCheck" level="MAJOR" enabled="true">
          <param name="allowNoEmptyLineBetweenFields" value="true" />
          <param name="tokens" value="PACKAGE_DEF, IMPORT, STATIC_IMPORT, CLASS_DEF, INTERFACE_DEF, ENUM_DEF,                     STATIC_INIT, INSTANCE_INIT, METHOD_DEF, CTOR_DEF, VARIABLE_DEF, RECORD_DEF,                     COMPACT_CTOR_DEF" />
        </coding_rule>
        <coding_rule class="EmptyStatementCheck" level="MINOR" enabled="false" />
        <coding_rule class="EqualsAvoidNullCheck" level="CRITICAL" enabled="false" />
        <coding_rule class="EqualsHashCodeCheck" level="CRITICAL" enabled="false" />
        <coding_rule class="ExecutableStatementCountCheck" level="MAJOR" enabled="false" />
        <coding_rule class="ExplicitInitializationCheck" level="MAJOR" enabled="false" />
        <coding_rule class="FallThroughCheck" level="MAJOR" enabled="true" />
        <coding_rule class="FileLengthCheck" level="MAJOR" enabled="false" />
        <coding_rule class="FileTabCharacterCheck" level="MAJOR" enabled="true">
          <param name="eachLine" value="true" />
        </coding_rule>
        <coding_rule class="FinalClassCheck" level="MAJOR" enabled="false" />
        <coding_rule class="FinalLocalVariableCheck" level="MINOR" enabled="false" />
        <coding_rule class="FinalParametersCheck" level="MINOR" enabled="false" />
        <coding_rule class="GenericWhitespaceCheck" level="MAJOR" enabled="true" />
        <coding_rule class="HeaderCheck" level="MAJOR" enabled="false" />
        <coding_rule class="HiddenFieldCheck" level="MAJOR" enabled="false" />
        <coding_rule class="HideUtilityClassConstructorCheck" level="MAJOR" enabled="false" />
        <coding_rule class="IllegalCatchCheck" level="MAJOR" enabled="false" />
        <coding_rule class="IllegalImportCheck" level="MAJOR" enabled="false" />
        <coding_rule class="IllegalInstantiationCheck" level="MAJOR" enabled="false" />
        <coding_rule class="IllegalThrowsCheck" level="MAJOR" enabled="false" />
        <coding_rule class="IllegalTokenCheck" level="MAJOR" enabled="false" />
        <coding_rule class="IllegalTokenTextCheck" level="MAJOR" enabled="true">
          <param name="format" value="\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)" />
          <param name="tokens" value="STRING_LITERAL, CHAR_LITERAL" />
          <param name="message" value="Consider using special escape sequence instead of octal value or Unicode escaped value." />
        </coding_rule>
        <coding_rule class="IllegalTypeCheck" level="MAJOR" enabled="false" />
        <coding_rule class="ImportControlCheck" level="MAJOR" enabled="false" />
        <coding_rule class="ImportOrderCheck" level="MINOR" enabled="false" />
        <coding_rule class="IndentationCheck" level="MINOR" enabled="true">
          <param name="throwsIndent" value="4" />
          <param name="arrayInitIndent" value="4" />
          <param name="caseIndent" value="4" />
          <param name="basicOffset" value="4" />
          <param name="braceAdjustment" value="0" />
          <param name="lineWrappingIndentation" value="4" />
        </coding_rule>
        <coding_rule class="InnerAssignmentCheck" level="MAJOR" enabled="false" />
        <coding_rule class="InnerTypeLastCheck" level="MAJOR" enabled="false" />
        <coding_rule class="InterfaceIsTypeCheck" level="MAJOR" enabled="false" />
        <coding_rule class="InterfaceMemberImpliedModifierCheck" level="MAJOR" enabled="false" />
        <coding_rule class="InterfaceTypeParameterNameCheck" level="MAJOR" enabled="true">
          <param name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)" />
        </coding_rule>
        <coding_rule class="InvalidJavadocPositionCheck" level="MAJOR" enabled="true" />
        <coding_rule class="JavaNCSSCheck" level="MAJOR" enabled="false" />
        <coding_rule class="JavadocBlockTagLocationCheck" level="MAJOR" enabled="false" />
        <coding_rule class="JavadocContentLocationCheck" level="MAJOR" enabled="false" />
        <coding_rule class="JavadocMethodCheck" level="MAJOR" enabled="true">
          <param name="scope" value="public" />
          <param name="tokens" value="METHOD_DEF, CTOR_DEF, ANNOTATION_FIELD_DEF, COMPACT_CTOR_DEF" />
          <param name="allowMissingReturnTag" value="false" />
          <param name="allowedAnnotations" value="Override, Test" />
          <param name="allowMissingParamTags" value="false" />
        </coding_rule>
        <coding_rule class="JavadocPackageCheck" level="MAJOR" enabled="false" />
        <coding_rule class="JavadocParagraphCheck" level="MAJOR" enabled="false" />
        <coding_rule class="JavadocStyleCheck" level="MAJOR" enabled="false" />
        <coding_rule class="JavadocTagContinuationIndentationCheck" level="MAJOR" enabled="false" />
        <coding_rule class="JavadocTypeCheck" level="MAJOR" enabled="false" />
        <coding_rule class="JavadocVariableCheck" level="MAJOR" enabled="true" />
        <coding_rule class="LambdaParameterNameCheck" level="MAJOR" enabled="true">
          <param name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$" />
        </coding_rule>
        <coding_rule class="LeftCurlyCheck" level="MINOR" enabled="true">
          <param name="tokens" value="ANNOTATION_DEF, CLASS_DEF, CTOR_DEF, ENUM_CONSTANT_DEF, ENUM_DEF,                     INTERFACE_DEF, LAMBDA, LITERAL_CASE, LITERAL_CATCH, LITERAL_DEFAULT,                     LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF,                     LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, METHOD_DEF,                     OBJBLOCK, STATIC_INIT, RECORD_DEF, COMPACT_CTOR_DEF" />
        </coding_rule>
        <coding_rule class="LineLengthCheck" level="MAJOR" enabled="true">
          <param name="fileExtensions" value="java" />
          <param name="max" value="100" />
          <param name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://" />
        </coding_rule>
        <coding_rule class="LocalFinalVariableNameCheck" level="MAJOR" enabled="false" />
        <coding_rule class="LocalVariableNameCheck" level="MAJOR" enabled="true">
          <param name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$" />
        </coding_rule>
        <coding_rule class="MagicNumberCheck" level="MINOR" enabled="false" />
        <coding_rule class="MemberNameCheck" level="MAJOR" enabled="true">
          <param name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$" />
        </coding_rule>
        <coding_rule class="MethodCountCheck" level="MAJOR" enabled="false" />
        <coding_rule class="MethodLengthCheck" level="MAJOR" enabled="true">
          <param name="max" value="100" />
          <param name="countEmpty" value="false" />
          <param name="tokens" value="METHOD_DEF" />
        </coding_rule>
        <coding_rule class="MethodNameCheck" level="MAJOR" enabled="true">
          <param name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$" />
        </coding_rule>
        <coding_rule class="MethodParamPadCheck" level="MAJOR" enabled="true">
          <param name="tokens" value="CTOR_DEF, LITERAL_NEW, METHOD_CALL, METHOD_DEF,                     SUPER_CTOR_CALL, ENUM_CONSTANT_DEF, RECORD_DEF" />
        </coding_rule>
        <coding_rule class="MethodTypeParameterNameCheck" level="MAJOR" enabled="true">
          <param name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)" />
        </coding_rule>
        <coding_rule class="MissingCtorCheck" level="MAJOR" enabled="false" />
        <coding_rule class="MissingDeprecatedCheck" level="MAJOR" enabled="false" />
        <coding_rule class="MissingJavadocMethodCheck" level="MAJOR" enabled="true">
          <param name="scope" value="public" />
          <param name="tokens" value="METHOD_DEF, CTOR_DEF, ANNOTATION_FIELD_DEF,                                    COMPACT_CTOR_DEF" />
          <param name="allowedAnnotations" value="Override, Test" />
          <param name="minLineCount" value="-1" />
        </coding_rule>
        <coding_rule class="MissingJavadocPackageCheck" level="MAJOR" enabled="false" />
        <coding_rule class="MissingJavadocTypeCheck" level="MAJOR" enabled="true" />
        <coding_rule class="MissingOverrideCheck" level="MAJOR" enabled="false" />
        <coding_rule class="MissingSwitchDefaultCheck" level="MAJOR" enabled="false" />
        <coding_rule class="ModifiedControlVariableCheck" level="MAJOR" enabled="false" />
        <coding_rule class="ModifierOrderCheck" level="MINOR" enabled="true" />
        <coding_rule class="MultipleStringLiteralsCheck" level="MAJOR" enabled="false" />
        <coding_rule class="MultipleVariableDeclarationsCheck" level="MAJOR" enabled="true" />
        <coding_rule class="MutableExceptionCheck" level="MAJOR" enabled="false" />
        <coding_rule class="NPathComplexityCheck" level="MAJOR" enabled="false" />
        <coding_rule class="NeedBracesCheck" level="MINOR" enabled="true">
          <param name="tokens" value="LITERAL_DO, LITERAL_ELSE, LITERAL_FOR, LITERAL_IF, LITERAL_WHILE" />
        </coding_rule>
        <coding_rule class="NestedForDepthCheck" level="MAJOR" enabled="false" />
        <coding_rule class="NestedIfDepthCheck" level="MAJOR" enabled="false" />
        <coding_rule class="NestedTryDepthCheck" level="MAJOR" enabled="false" />
        <coding_rule class="NewlineAtEndOfFileCheck" level="MINOR" enabled="false" />
        <coding_rule class="NoArrayTrailingCommaCheck" level="MAJOR" enabled="false" />
        <coding_rule class="NoCloneCheck" level="MAJOR" enabled="false" />
        <coding_rule class="NoEnumTrailingCommaCheck" level="MAJOR" enabled="false" />
        <coding_rule class="NoFinalizerCheck" level="MAJOR" enabled="true" />
        <coding_rule class="NoLineWrapCheck" level="MAJOR" enabled="true">
          <param name="tokens" value="PACKAGE_DEF, IMPORT, STATIC_IMPORT" />
        </coding_rule>
        <coding_rule class="NoWhitespaceAfterCheck" level="MINOR" enabled="false" />
        <coding_rule class="NoWhitespaceBeforeCheck" level="MINOR" enabled="true">
          <param name="tokens" value="COMMA, SEMI, POST_INC, POST_DEC, DOT,                     LABELED_STAT, METHOD_REF" />
          <param name="allowLineBreaks" value="true" />
        </coding_rule>
        <coding_rule class="NonEmptyAtclauseDescriptionCheck" level="MAJOR" enabled="true" />
        <coding_rule class="OneStatementPerLineCheck" level="MINOR" enabled="true" />
        <coding_rule class="OneTopLevelClassCheck" level="MAJOR" enabled="true" />
        <coding_rule class="OperatorWrapCheck" level="MINOR" enabled="true">
          <param name="tokens" value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR,                     LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF " />
          <param name="option" value="NL" />
        </coding_rule>
        <coding_rule class="OrderedPropertiesCheck" level="MAJOR" enabled="false" />
        <coding_rule class="OuterTypeFilenameCheck" level="MINOR" enabled="true" />
        <coding_rule class="OuterTypeNumberCheck" level="MAJOR" enabled="false" />
        <coding_rule class="OverloadMethodsDeclarationOrderCheck" level="MAJOR" enabled="true" />
        <coding_rule class="PackageAnnotationCheck" level="MAJOR" enabled="false" />
        <coding_rule class="PackageDeclarationCheck" level="MAJOR" enabled="false" />
        <coding_rule class="PackageNameCheck" level="MAJOR" enabled="true">
          <param name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$" />
        </coding_rule>
        <coding_rule class="ParameterAssignmentCheck" level="MAJOR" enabled="false" />
        <coding_rule class="ParameterNameCheck" level="MAJOR" enabled="true">
          <param name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$" />
        </coding_rule>
        <coding_rule class="ParameterNumberCheck" level="MAJOR" enabled="false" />
        <coding_rule class="ParenPadCheck" level="MINOR" enabled="true">
          <param name="tokens" value="ANNOTATION, ANNOTATION_FIELD_DEF, CTOR_CALL, CTOR_DEF, DOT, ENUM_CONSTANT_DEF,                     EXPR, LITERAL_CATCH, LITERAL_DO, LITERAL_FOR, LITERAL_IF, LITERAL_NEW,                     LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_WHILE, METHOD_CALL,                     METHOD_DEF, QUESTION, RESOURCE_SPECIFICATION, SUPER_CTOR_CALL, LAMBDA,                     RECORD_DEF" />
        </coding_rule>
        <coding_rule class="RedundantImportCheck" level="MINOR" enabled="false" />
        <coding_rule class="RedundantModifierCheck" level="MINOR" enabled="false" />
        <coding_rule class="RegexpCheck" level="MAJOR" enabled="false" />
        <coding_rule class="RegexpHeaderCheck" level="MAJOR" enabled="false" />
        <coding_rule class="RegexpMultilineCheck" level="MAJOR" enabled="false" />
        <coding_rule class="RegexpOnFilenameCheck" level="MAJOR" enabled="false" />
        <coding_rule class="RegexpSinglelineCheck" level="MAJOR" enabled="false" />
        <coding_rule class="RegexpSinglelineJavaCheck" level="MAJOR" enabled="false" />
        <coding_rule class="RequireThisCheck" level="MAJOR" enabled="false" />
        <coding_rule class="ReturnCountCheck" level="MAJOR" enabled="false" />
        <coding_rule class="RightCurlyCheck" level="MINOR" enabled="true">
          <param name="tokens" value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT,                     INSTANCE_INIT, ANNOTATION_DEF, ENUM_DEF, INTERFACE_DEF, RECORD_DEF,                     COMPACT_CTOR_DEF" />
          <param name="option" value="alone" />
        </coding_rule>
        <coding_rule class="SeparatorWrapCheck" level="MAJOR" enabled="true">
          <param name="tokens" value="METHOD_REF" />
          <param name="option" value="nl" />
        </coding_rule>
        <coding_rule class="SimplifyBooleanExpressionCheck" level="MAJOR" enabled="false" />
        <coding_rule class="SimplifyBooleanReturnCheck" level="MAJOR" enabled="false" />
        <coding_rule class="SingleLineJavadocCheck" level="MAJOR" enabled="true">
          <param name="ignoreInlineTags" value="false" />
        </coding_rule>
        <coding_rule class="SingleSpaceSeparatorCheck" level="MAJOR" enabled="false" />
        <coding_rule class="StaticVariableNameCheck" level="MAJOR" enabled="false" />
        <coding_rule class="StringLiteralEqualityCheck" level="MAJOR" enabled="false" />
        <coding_rule class="SummaryJavadocCheck" level="MAJOR" enabled="true">
          <param name="period" value="" />
          <param name="forbiddenSummaryFragments" value="^@return the *|^This method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a )" />
        </coding_rule>
        <coding_rule class="SuperCloneCheck" level="MAJOR" enabled="false" />
        <coding_rule class="SuperFinalizeCheck" level="MAJOR" enabled="false" />
        <coding_rule class="SuppressWarningsCheck" level="MAJOR" enabled="false" />
        <coding_rule class="SuppressWarningsHolder" level="MAJOR" enabled="false" />
        <coding_rule class="ThrowsCountCheck" level="MAJOR" enabled="false" />
        <coding_rule class="TodoCommentCheck" level="MINOR" enabled="false" />
        <coding_rule class="TrailingCommentCheck" level="MINOR" enabled="false" />
        <coding_rule class="TranslationCheck" level="MINOR" enabled="false" />
        <coding_rule class="TypeNameCheck" level="MAJOR" enabled="true">
          <param name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF,                     ANNOTATION_DEF, RECORD_DEF" />
        </coding_rule>
        <coding_rule class="TypecastParenPadCheck" level="MAJOR" enabled="false" />
        <coding_rule class="UncommentedMainCheck" level="MAJOR" enabled="false" />
        <coding_rule class="UniquePropertiesCheck" level="MAJOR" enabled="false" />
        <coding_rule class="UnnecessaryParenthesesCheck" level="MINOR" enabled="false" />
        <coding_rule class="UnnecessarySemicolonAfterTypeMemberDeclarationCheck" level="MAJOR" enabled="false" />
        <coding_rule class="UnnecessarySemicolonInEnumerationCheck" level="MAJOR" enabled="false" />
        <coding_rule class="UnnecessarySemicolonInTryWithResourcesCheck" level="MAJOR" enabled="false" />
        <coding_rule class="UnusedImportsCheck" level="INFO" enabled="false" />
        <coding_rule class="UpperEllCheck" level="MINOR" enabled="true" />
        <coding_rule class="VariableDeclarationUsageDistanceCheck" level="MAJOR" enabled="true" />
        <coding_rule class="VisibilityModifierCheck" level="MAJOR" enabled="false" />
        <coding_rule class="WhitespaceAfterCheck" level="MINOR" enabled="true">
          <param name="tokens" value="COMMA, SEMI, TYPECAST, LITERAL_IF, LITERAL_ELSE,                     LITERAL_WHILE, LITERAL_DO, LITERAL_FOR, DO_WHILE" />
        </coding_rule>
        <coding_rule class="WhitespaceAroundCheck" level="MINOR" enabled="true">
          <param name="allowEmptyConstructors" value="true" />
          <param name="ignoreEnhancedForColon" value="false" />
          <param name="allowEmptyLambdas" value="true" />
          <param name="allowEmptyMethods" value="true" />
          <param name="allowEmptyLoops" value="true" />
          <param name="tokens" value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR,                     BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, DO_WHILE, EQUAL, GE, GT, LAMBDA, LAND,                     LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY,                     LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SWITCH, LITERAL_SYNCHRONIZED,                     LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN,                     NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, RCURLY, SL, SLIST, SL_ASSIGN, SR,                     SR_ASSIGN, STAR, STAR_ASSIGN, LITERAL_ASSERT, TYPE_EXTENSION_AND" />
          <param name="allowEmptyTypes" value="true" />
        </coding_rule>
        <coding_rule class="WriteTagCheck" level="MINOR" enabled="false" />
      </profile>
    </profiles>
    <list size="0" />
  </component>
</project>